{"version":3,"sources":["components/ContactList.js","components/ContactForm.js","components/Filter.js","components/App.js","index.js"],"names":["ContactList","contacts","onRemoveContact","map","contact","key","id","name","phone","type","onClick","defaultProps","ContactForm","state","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","onSubmit","placeholder","onChange","Component","Filter","onChangeFilter","App","filter","changeFilter","addContact","find","alert","uuid","prevState","getFiltredContacts","toLowerCase","includes","removeContact","ContactId","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"yQAGe,SAASA,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC9C,OACE,4BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,wBAAIC,IAAKD,EAAQE,IACf,2BACGF,EAAQG,KADX,MACoBH,EAAQI,OAE5B,4BAAQC,KAAK,SAASC,QAAS,kBAAMR,EAAgBE,EAAQE,MAA7D,eASVN,EAAYW,aAAe,CACzBV,SAAU,I,WClBSW,E,2MAKnBC,MAAQ,CACNN,KAAM,GACNC,MAAO,I,EAGTM,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBT,EADU,EACVA,KAAMU,EADI,EACJA,MACd,EAAKC,SAAL,eACGX,EAAOU,K,EAIZE,YAAc,SAAAJ,GACZA,EAAEK,iBADe,MAEO,EAAKP,MAArBN,EAFS,EAETA,KAAMC,EAFG,EAEHA,MACd,EAAKa,MAAMC,aAAaf,EAAMC,GAC9B,EAAKU,SAAS,CAAEX,KAAM,GAAIC,MAAO,M,wEAGzB,IAAD,EACiBe,KAAKV,MAArBN,EADD,EACCA,KAAMC,EADP,EACOA,MACd,OACE,0BAAMgB,SAAUD,KAAKJ,aACnB,sCAEE,2BACEV,KAAK,OACLQ,MAAOV,EACPkB,YAAY,aACZC,SAAUH,KAAKT,aACfP,KAAK,UAGT,uCAEE,2BACEE,KAAK,OACLQ,MAAOT,EACPiB,YAAY,cACZC,SAAUH,KAAKT,aACfP,KAAK,WAGT,4BAAQE,KAAK,UAAb,oB,GAhDiCkB,aCA1B,SAASC,EAAT,GAA4C,IAA1BX,EAAyB,EAAzBA,MAAOY,EAAkB,EAAlBA,eACtC,OACE,6BACE,2BACEpB,KAAK,OACLQ,MAAOA,EACPS,SAAU,SAAAX,GAAC,OAAIc,EAAed,EAAEC,OAAOC,WAM/CW,EAAOjB,aAAe,CACpBM,MAAO,I,YCVYa,E,2MACnBjB,MAAQ,CACNZ,SAAU,GACV8B,OAAQ,I,EAGVC,aAAe,SAAAD,GACb,EAAKb,SAAS,CAAEa,Y,EAGlBE,WAAa,SAAC1B,EAAMC,GAGlB,GAFqB,EAAKK,MAAlBZ,SACsBiC,MAAK,SAAA9B,GAAO,OAAIA,EAAQG,OAASA,KAE7D4B,MAAM,GAAD,OAAI5B,EAAJ,gCACA,CACL,IAAMH,EAAU,CAAEE,GAAI8B,iBAAQ7B,OAAMC,SACpC,EAAKU,UAAS,SAAAmB,GACZ,MAAO,CAAEpC,SAAS,GAAD,mBAAMoC,EAAUpC,UAAhB,CAA0BG,U,EAKjDkC,mBAAqB,WAAO,IAAD,EACI,EAAKzB,MAA1BZ,EADiB,EACjBA,SAAU8B,EADO,EACPA,OAClB,OAAO9B,EAAS8B,QAAO,SAAA3B,GAAO,OAC5BA,EAAQG,KAAKgC,cAAcC,SAAST,EAAOQ,mB,EAI/CE,cAAgB,SAAAC,GACd,EAAKxB,UAAS,SAAAmB,GACZ,MAAO,CACLpC,SAAUoC,EAAUpC,SAAS8B,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAOoC,U,wEAK1D,IAAD,EACsBnB,KAAKV,MAA1BZ,EADD,EACCA,SAAU8B,EADX,EACWA,OACZY,EAAkBpB,KAAKe,qBAC7B,OACE,oCACE,yCACA,kBAAC,EAAD,CAAahB,aAAcC,KAAKU,aAChC,wCACChC,EAAS2C,OAAS,GACjB,kBAAChB,EAAD,CAAQX,MAAOc,EAAQF,eAAgBN,KAAKS,eAE7CW,EAAgBC,OAAS,GACxB,kBAAC5C,EAAD,CACEC,SAAU0C,EACVzC,gBAAiBqB,KAAKkB,qB,GApDDd,aCFjCkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d75e8263.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <p>\n            {contact.name} : {contact.phone}\n          </p>\n          <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: []\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onRemoveContact: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form onSubmit={this.hanleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n          ></input>\n        </label>\n        <label>\n          Phone\n          <input\n            type=\"text\"\n            value={phone}\n            placeholder=\"Enter phone\"\n            onChange={this.handleChange}\n            name=\"phone\"\n          ></input>\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      ></input>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\"\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ContactList from \"./ContactList\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\nimport { uuid } from \"uuidv4\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  addContact = (name, phone) => {\n    const { contacts } = this.state;\n    const dubleContact = contacts.find(contact => contact.name === name);\n    if (dubleContact) {\n      alert(`${name} is already in cntacts!`);\n    } else {\n      const contact = { id: uuid(), name, phone };\n      this.setState(prevState => {\n        return { contacts: [...prevState.contacts, contact] };\n      });\n    }\n  };\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = ContactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== ContactId)\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getFiltredContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}