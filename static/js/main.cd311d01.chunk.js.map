{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App/App.js","index.js","components/App/App.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","map","contact","className","styles","contactItem","key","id","name","phone","contactButton","type","onClick","defaultProps","ContactForm","state","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","Filter","onChangeFilter","filter","App","changeFilter","addContact","some","alert","uuid","prevState","getFiltredContacts","toLowerCase","includes","removeContact","visibleContacts","section","title","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd311d01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li className={styles.contactItem} key={contact.id}>\n          <p>\n            {contact.name} : {contact.phone}\n          </p>\n          <button\n            className={styles.contactButton}\n            type=\"button\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: [],\n  onRemoveContact: () => {}\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onRemoveContact: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n  static defaultProps = {\n    onAddContact: () => {}\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.hanleSubmit}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n            required\n          ></input>\n        </label>\n        <label className={styles.formLabel}>\n          Phone\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={phone}\n            placeholder=\"Enter phone\"\n            onChange={this.handleChange}\n            name=\"phone\"\n            required\n          ></input>\n        </label>\n        <button className={styles.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <input\n        className={styles.filter}\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      ></input>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\"\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport styles from \"./App.module.css\";\nimport { uuid } from \"uuidv4\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  addContact = (name, phone) => {\n    const { contacts } = this.state;\n    const isExist = contacts.some(contact => contact.name === name);\n    if (isExist) {\n      alert(`${name} is already in cntacts!`);\n      return;\n    }\n    const contact = { id: uuid(), name, phone };\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getFiltredContacts();\n    return (\n      <section className={styles.section}>\n        <h1 className={styles.title}>Phonebook</h1>\n        {ContactForm && <ContactForm onAddContact={this.addContact} />}\n        <h2 className={styles.title}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./css/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\",\"section\":\"App_section__1zThd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"contactButton\":\"ContactList_contactButton__2Dq4-\"};"],"sourceRoot":""}